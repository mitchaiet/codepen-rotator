*, *::before, *::after {
    padding: 0;
    margin: 0 auto;
    box-sizing: border-box;
}

body {
  background-color: #222;
  color: #fff;
  min-height: 100vh;
  display: grid;
  place-items: center;
  perspective: 1200px;
  
  *:not(:empty) {
    transform-style: preserve-3d;
  }
}

.scene {
  position: relative;
}

$duration: 12s;
$count: 48;

.drop {
  position: absolute;
  left: 0; bottom: -25vh;
  width: 1px; height: 100vh;
  transform: translate3d(var(--tx,0), 0, var(--tz,0));
  transform-style: preserve-3d;
  background-image: linear-gradient(transparent 95vh, #def3);
  animation: drop $duration var(--delay, 0s) ease-in infinite;
    
  @keyframes drop {
    0%, 75% { background-position-y: 5vh; }
    100% { background-position-y: 105vh; }
  }
  @for $i from 0 to $count {
    &:nth-child(#{$i + 1}) {
      --delay: #{$duration / $count * $i * -1};
      --tx: #{(random(200) - 100) / 4}vmin;
      --tz: #{(random(200) - 100) / 4}vmin;
    }
  }
  
  &::after {
    content: '';
    position: absolute;
    left: 0; bottom: 0;
    width: 60vmin; height: 60vmin;
    background-image: radial-gradient(closest-side, transparent, #def, transparent, #eff, transparent, #def, transparent);
    animation: waves $duration calc(var(--delay, 0s) - #{$duration * 0.03}) linear infinite;
  
    @keyframes waves {
      0% { transform: translate(-50%, 50%) rotateX(-90deg) scale(0); opacity: 0.05;}
      100% { transform: translate(-50%, 50%) rotateX(-90deg) scale(2); opacity: 0; }
    }
  }
}